version: "3.8"

services:
  postgresql:
    container_name: postgresql
    restart: always
    build: ./packages/postgresql
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_DB}
    ports:
      - "5432:5432"

  migration:
    container_name: migration
    build:
      context: ./packages/migration
      dockerfile: Dockerfile.dev
    links:
      - postgresql
    environment:
      - DATABASE_USER
      - DATABASE_PASSWORD
      - DATABASE_DB
      - DATABASE_HOST
      - DATABASE_PORT
    depends_on:
      - postgresql
      - graphql

  graphql:
    container_name: graphql
    restart: always
    build:
      context: ./packages/graphql
      dockerfile: Dockerfile.dev
    environment:
      - DATABASE_URL
      - DATABASE_USER
      - DATABASE_PASSWORD
      - DATABASE_DB
      - DATABASE_HOST
      - DATABASE_PORT
      - GOOGLE_APPLICATION_CREDENTIALS
      - FIREBASE_API_KEY
      - FIREBASE_AUTH_DOMAIN
      - FIREBASE_DATABASE_URL
      - FIREBASE_PROJECT_ID
      - FIREBASE_STORAGE_BUCKET
      - FIREBASE_MESSAGING_SENDER_ID
      - FIREBASE_APP_ID
      - FIREBASE_MEASUREMENT_ID
    ports:
      - "3001:3001"
    depends_on:
      - postgresql
    volumes:
      - server:/usr/share/server/data

  web:
    container_name: web
    restart: always
    build:
      context: ./packages/web
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    links:
      - graphql
    depends_on:
      - postgresql
      - graphql
      - migration
    volumes:
      - "./packages/web:/web"
      - "/web/node_modules"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_FIREBASE_API_KEY
      - REACT_APP_FIREBASE_AUTH_DOMAIN
      - REACT_APP_FIREBASE_DATABASE_URL
      - REACT_APP_FIREBASE_PROJECT_ID
      - REACT_APP_FIREBASE_STORAGE_BUCKET
      - REACT_APP_FIREBASE_MESSAGING_SENDER_ID
      - REACT_APP_FIREBASE_APP_ID
      - REACT_APP_FIREBASE_MEASUREMENT_ID
      - REACT_APP_GRAPHQL_URI
      - REACT_APP_IP_IFY_API_KEY
      - SKIP_PREFLIGHT_CHECK

volumes:
  front:
    driver: local
  data01:
    driver: local
  server:
    driver: local
