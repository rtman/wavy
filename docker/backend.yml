apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: groov-backend
  labels:
    app: groov-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: groov-backend
  template:
    metadata:
      labels:
        app: groov-backend
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: data-01
          # persistentVolumeClaim:
          #   claimName: data-01-claim
          #   may require own persistentVolumeClaim yml
      initContainers:
        - name: init-sysctl
          image: busybox
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
      containers:
        # - resources:
        #   requests:
        - name: postgresql
          image: gcr.io/groov-development-ddc9d/groov-postgresql:latest
          resources:
            limits:
              cpu: "200m"
            requests:
              cpu: "100m"
          ports:
            - containerPort: 5432
              name: postgresql
          env:
            - name: POSTGRES_USER
              value: groov
            - name: POSTGRES_PASSWORD
              value: groov
            - name: POSTGRES_DB
              value: groov
        - name: graphql
          image: gcr.io/groov-development-ddc9d/groov-graphql:latest
          resources:
            limits:
              cpu: "200m"
            requests:
              cpu: "100m"
          ports:
            - containerPort: 3001
              name: graphql
          env:
            - name: DATABASE_URL
              value: postgresql
            - name: DATABASE_USER
              value: groov
            - name: DATABASE_PASSWORD
              value: groov
            - name: DATABASE_DB
              value: groov
            - name: DATABASE_HOST
              value: "127.0.0.1"
        # - name: migration
        #   image: gcr.io/groov-development-ddc9d/groov-migration:latest
        #   resources:
        #     limits:
        #       cpu: "200m"
        #     requests:
        #       cpu: "100m"
        #   env:
        #     - name: DATABASE_USER
        #       value: groov
        #     - name: DATABASE_PASSWORD
        #       value: groov
        #     - name: DATABASE_DB
        #       value: groov
        #     - name: DATABASE_HOST
        #       value: "127.0.0.1"
        #     - name: ELASTICSEARCH_HOST
        #       value: "127.0.0.1"
        - name: es01
          # zombodb requires elasticsearch 5/6
          image: docker.elastic.co/elasticsearch/elasticsearch:6.8.6
          resources:
            limits:
              cpu: "200m"
              memory: "1024Mi"
            requests:
              cpu: "100m"
              memory: "512Mi"
              # https://github.com/kubernetes/kubernetes/issues/3595#issuecomment-287692878
              # https://rancher.com/blog/2018/2018-11-22-deploying-elasticsearch/
          securityContext:
            privileged: true
            runAsUser: 1000
            capabilities:
              add:
                - IPC_LOCK
                - SYS_RESOURCE
          # need to figure out how to implement this in k8s
          # https://github.com/elastic/elasticsearch-docker/issues/152#issuecomment-372903395
          # ulimits:
          #   memlock:
          #     soft: -1
          #     hard: -1
          ports:
            - containerPort: 9200
              name: es01
          # command: ["elasticsearch", "-Elogger.level=ERROR"]
          env:
            - name: node.name
              value: es01
            - name: cluster.name
              value: es-docker-cluster
              # this is something to research more
              # https://www.elastic.co/guide/en/elasticsearch/reference/6.7/setup-configuration-memory.html
              # Doesnt work on k8s but works on docker-compose
            - name: bootstrap.memory_lock
              value: "false"
            - name: ES_JAVA_OPTS
              value: -Xms512m -Xmx512m
          # - name: discovery.seed_hosts
          #value: es02,es03
          # -name: cluster.initial_master_nodes
          # vlaue: es01,es02,es03
          #  es 7+ setting below
          # -name: cluster.initial_master_nodes
          # value: es01
          volumeMounts:
            - name: data-01
              mountPath: /var/www/html
              # volumes:
              #     - elasticData01:/usr/share/elasticsearch/data

---
apiVersion: v1
kind: Service
metadata:
  name: groov-backend
  labels:
    app: groov-backend
spec:
  ports:
    - name: graphql
      protocol: TCP
      port: 3001
      targetPort: 3001
    - name: es01
      protocol: TCP
      port: 9200
      targetPort: 9200
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    app: groov-backend
